[props]

컴포넌트 불러올 때 사용되는 매개변수가 props
App에서 Hello 컴포넌트를 사용할 때...
<Hello age={10}/> 

Hello 함수에서 props를 넘겨받고 
콘솔로 출력하면 객체 형태임을 알 수 있다
export default function Hello(props){
    console.log(props); // props는 객체
}
출력 : {age: 10}

props가 객체이므로 age를 쓰고 싶다면 props.age로 사용
{name}({props.age})
이 props.age값은 Hello에서 변경 불가
App에서 넘겨받은 그대로 사용해야 한다
만약 age를 변경시키고 싶다면...

import { useState } from "react"; 

export default function Hello(props){
    console.log(props); // props는 객체
    const [name, setName] = useState('suhvin');
    const [age, setAge] = useState(props.age);

    return (
        <div> 
            <h2 id="name">
                {name}({age})
            </h2>
            <button onClick={() => {
                setName(name === "suhvin" ? "kevin" : "suhvin");
                setAge(age+1);
            }}>Change</button>
        </div>
    );
}

새로운 변수 age를 생성하고 거기에 props.age를 할당해야 한다


props.age로 매개변수를 받지 않고, 한 번에 age를 받을 수도 있다 
export default function Hello({age}){}
이렇게 애초에 Hello(props)가 아니라 Hello({age})를 받으면 된다


한 컴포넌트의 state가 다른 컴포넌트의 props 일수도 있다
import { useState } from "react"; 
import UserName from "./UserName";

export default function Hello({age}){
    const [name, setName] = useState('suhvin');
    const msg = age > 19 ? "성인입니다" : "미성년자 입니다";

    return (
        <div> 
            <h2 id="name">
                {name}({age}) : {msg}
            </h2>
            <UserName name={name}/>
            {/* 이 name은 Hello에서는 state 이지만
            userName에서는 props이다*/}
            <button onClick={() => {
                setName(name === "suhvin" ? "kevin" : "suhvin");
            }}>Change</button>
        </div>
    );
}
